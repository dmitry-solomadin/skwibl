// Generated by CoffeeScript 1.4.0
(function() {

  $(function() {
    var Projects;
    Projects = (function() {

      function Projects() {
        this.uid = $("#uid").val();
        $('#add').click(function() {
          var projectName;
          projectName = $('#projectName').valc();
          if (projectName === '') {
            return;
          }
          return $.post('/projects/add', {
            name: projectName
          }, function(data, status, xhr) {
            if (status === 'success' && data) {
              return $('#projects').append(("<input type='radio' name='project' value='" + data.id + "' onchange='App.projects.switchProject()'>") + ("<a href='/dev/projects/" + data.id + "'>" + data.name + "</a><br>"));
            }
          });
        });
      }

      Projects.prototype.switchProject = function() {
        return $.post('/dev/projects/get', {
          pid: this.getSelectedProjectId()
        }, function(data, status, xhr) {
          var el, info, user, users, _i, _len, _results;
          info = $('#info');
          users = $('#projectUsers');
          info.empty();
          users.empty();
          if (status === 'success' && data) {
            _results = [];
            for (_i = 0, _len = data.length; _i < _len; _i++) {
              el = data[_i];
              if (el === 'users') {
                _results.push((function() {
                  var _j, _len1, _ref, _results1;
                  _ref = data.users;
                  _results1 = [];
                  for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
                    user = _ref[_j];
                    if (user.id !== this.uid) {
                      _results1.push(users.append("<input type='radio' name='user' value='" + user.id + "' onchange='App.projects.switchUser()'/>" + user.displayName + "<br>"));
                    } else {
                      _results1.push(void 0);
                    }
                  }
                  return _results1;
                }).call(this));
              } else {
                _results.push(info.append("<li>" + el + " : " + data[el] + "</li>"));
              }
            }
            return _results;
          }
        });
      };

      Projects.prototype.deleteProject = function() {
        return $.post('/projects/delete', {
          pid: this.getSelectedProjectId()
        }, function(data, status, xhr) {
          if (status === 'success') {
            return $("[name=project]:checked").remove();
          }
        });
      };

      Projects.prototype.deleteUser = function() {
        return $.post('/projects/remove', {
          pid: this.getSelectedProjectId(),
          id: this.getSelectedUserId
        });
      };

      Projects.prototype.inviteUser = function() {
        var uid;
        uid = $("[name=userId]").valc();
        return $.post('/projects/invite', {
          uid: uid,
          pid: this.getSelectedProjectId()
        }, function(data, status, xhr) {
          if (status === 'success') {
            return console.log('invited');
          }
        });
      };

      Projects.prototype.accept = function() {
        console.log('accept invitation');
        return $.post('/projects/confirm', {
          aid: this.getSelectedActivityId(),
          answer: true
        }, function(data, status, xhr) {
          if (status === 'success') {
            return console.log('accepted');
          }
        });
      };

      Projects.prototype.decline = function() {
        console.log('decline invitation');
        return $.post('/projects/confirm', {
          aid: this.getSelectedActivityId(),
          answer: true
        }, function(data, status, xhr) {
          if (status === 'success') {
            return console.log('declined');
          }
        });
      };

      Projects.prototype.getSelectedUserId = function() {
        return $("[name=user]:checked").val();
      };

      Projects.prototype.getSelectedActivityId = function() {
        return $("[name=activity]:checked").val();
      };

      Projects.prototype.getSelectedProjectId = function() {
        return $("[name=project]:checked").val();
      };

      return Projects;

    })();
    return App.projects = new Projects;
  });

}).call(this);
