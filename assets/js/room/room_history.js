// Generated by CoffeeScript 1.4.0
(function() {

  $(function() {
    var RoomHistory;
    RoomHistory = (function() {

      function RoomHistory() {}

      RoomHistory.prototype.prev = function() {
        var executePrevHistory, item,
          _this = this;
        if (room.opts.historyCounter === 0) {
          return;
        }
        executePrevHistory = function(item, reverse) {
          if (item.type === "remove") {
            executePrevHistory(item.tool, true);
          }
          if (item.type === "clear") {
            return $(item.tools).each(function() {
              return executePrevHistory(this, true);
            });
          } else if (item.commentMin) {
            if (reverse) {
              return room.comments.showComment(item.commentMin);
            } else {
              return room.comments.hideComment(item.commentMin);
            }
          } else {
            return room.helper.reverseOpacity(item);
          }
        };
        $("#redoLink").removeClass("disabled");
        opts.historyCounter = opts.historyCounter - 1;
        item = opts.historytools.eligibleHistory[opts.historyCounter];
        if (item != null) {
          executePrevHistory(item);
          room.redrawWithThumb();
        }
        if (opts.historyCounter === 0) {
          return $("#undoLink").addClass("disabled");
        }
      };

      RoomHistory.prototype.next = function() {
        var executeNextHistory, item,
          _this = this;
        if (opts.historyCounter === opts.historytools.eligibleHistory.length) {
          return;
        }
        executeNextHistory = function(item, reverse) {
          if (item.type === "remove") {
            return executeNextHistory(item.tool, true);
          } else if (item.type === "clear") {
            return $(item.tools).each(function() {
              return executeNextHistory(this, true);
            });
          } else if (item.commentMin) {
            if (reverse) {
              return room.comments.hideComment(item.commentMin);
            } else {
              return room.comments.showComment(item.commentMin);
            }
          } else {
            return room.helper.reverseOpacity(item);
          }
        };
        $("#undoLink").removeClass("disabled");
        item = opts.historytools.eligibleHistory[opts.historyCounter];
        if (item != null) {
          executeNextHistory(item);
          opts.historyCounter = opts.historyCounter + 1;
          room.redrawWithThumb();
        }
        if (opts.historyCounter === opts.historytools.eligibleHistory.length) {
          return $("#redoLink").addClass("disabled");
        }
      };

      RoomHistory.prototype.getSelectableTools = function() {
        var selectableTools, tool, _i, _len, _ref;
        selectableTools = [];
        _ref = opts.historytools.allHistory;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tool = _ref[_i];
          if (tool.opacity !== 0) {
            selectableTools.push(tool);
          }
        }
        return selectableTools;
      };

      RoomHistory.prototype.add = function(tool) {
        tool = tool ? tool : opts.tool;
        if (opts.historyCounter !== opts.historytools.eligibleHistory.length) {
          opts.historytools.eligibleHistory = opts.historytools.eligibleHistory.slice(0, room.opts.historyCounter);
        }
        if (tool.eligible) {
          opts.historytools.eligibleHistory.push(tool);
        }
        opts.historytools.allHistory.push(tool);
        opts.historyCounter = opts.historytools.eligibleHistory.length;
        if (tool.eligible) {
          $("#undoLink").removeClass("disabled");
          return $("#redoLink").addClass("disabled");
        }
      };

      return RoomHistory;

    })();
    return App.room.history = new RoomHistory;
  });

}).call(this);
